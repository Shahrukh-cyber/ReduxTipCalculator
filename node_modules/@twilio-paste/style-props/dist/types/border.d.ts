import type * as CSS from 'csstype';
import type { ThemeShape } from '@twilio-paste/theme';
import type { ResponsiveValue } from '@twilio-paste/styling-library';
import type { StyleReset } from './helpers';
export declare type BorderRadiusOptions = keyof ThemeShape['radii'];
export declare type BorderWidthOptions = keyof ThemeShape['borderWidths'];
export declare type BorderColorOptions = keyof ThemeShape['borderColors'] | 'transparent' | 'inherit';
export declare type BorderRadius = ResponsiveValue<BorderRadiusOptions>;
export declare type BorderWidth = ResponsiveValue<BorderWidthOptions>;
export declare type BorderColor = ResponsiveValue<BorderColorOptions>;
export interface BorderRadiusProps {
    borderRadius?: BorderRadius;
    borderBottomLeftRadius?: BorderRadius;
    borderBottomRightRadius?: BorderRadius;
    borderTopLeftRadius?: BorderRadius;
    borderTopRightRadius?: BorderRadius;
}
export interface BorderWidthProps {
    borderWidth?: BorderWidth;
    borderBottomWidth?: BorderWidth;
    borderLeftWidth?: BorderWidth;
    borderRightWidth?: BorderWidth;
    borderTopWidth?: BorderWidth;
}
export interface BorderColorProps {
    borderColor?: BorderColor;
    borderBottomColor?: BorderColor;
    borderLeftColor?: BorderColor;
    borderRightColor?: BorderColor;
    borderTopColor?: BorderColor;
}
export declare type BorderStyleOptions = CSS.BorderStyleProperty;
export declare type BorderTopStyleOptions = CSS.BorderTopStyleProperty;
export declare type BorderRightStyleOptions = CSS.BorderRightStyleProperty;
export declare type BorderBottomStyleOptions = CSS.BorderBottomStyleProperty;
export declare type BorderLeftStyleOptions = CSS.BorderLeftStyleProperty;
export declare type BorderStyle = ResponsiveValue<BorderStyleOptions>;
export declare type BorderTopStyle = ResponsiveValue<BorderTopStyleOptions>;
export declare type BorderRightStyle = ResponsiveValue<BorderRightStyleOptions>;
export declare type BorderBottomStyle = ResponsiveValue<BorderBottomStyleOptions>;
export declare type BorderLeftStyle = ResponsiveValue<BorderLeftStyleOptions>;
export interface BorderStyleProps {
    borderStyle?: BorderStyle;
    borderTopStyle?: BorderTopStyle;
    borderRightStyle?: BorderRightStyle;
    borderBottomStyle?: BorderBottomStyle;
    borderLeftStyle?: BorderLeftStyle;
}
export interface BorderProps extends BorderWidthProps, BorderStyleProps, BorderColorProps, BorderRadiusProps {
    border?: StyleReset;
    borderTop?: StyleReset;
    borderRight?: StyleReset;
    borderBottom?: StyleReset;
    borderLeft?: StyleReset;
}
//# sourceMappingURL=border.d.ts.map