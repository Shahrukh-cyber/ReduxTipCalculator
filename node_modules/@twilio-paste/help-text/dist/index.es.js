var R=Object.prototype.hasOwnProperty;var n=Object.getOwnPropertySymbols,H=Object.prototype.propertyIsEnumerable;var l=Object.assign;var c=(r,i)=>{var o={};for(var e in r)R.call(r,e)&&i.indexOf(e)<0&&(o[e]=r[e]);if(r!=null&&n)for(var e of n(r))i.indexOf(e)<0&&H.call(r,e)&&(o[e]=r[e]);return o};import{createElement as t,forwardRef as d}from"react";import{oneOf as O}from"prop-types";import{Box as f}from"@twilio-paste/box";import{Flex as v}from"@twilio-paste/flex";import{Text as y,safelySpreadTextProps as V}from"@twilio-paste/text";import{ErrorIcon as T}from"@twilio-paste/icons/esm/ErrorIcon";var a={DEFAULT:"default",ERROR:"error",ERROR_INVERSE:"error_inverse",INVERSE:"inverse"},m=d((x,E)=>{var{marginTop:r,children:i,variant:o}=x,e=c(x,["marginTop","children","variant"]);let p=null;switch(o){case a.ERROR:p=t(f,{flexShrink:0},t(T,{color:"colorTextError",decorative:!0,size:"sizeIcon20"}));break;case a.ERROR_INVERSE:p=t(f,{flexShrink:0},t(T,{color:"colorTextErrorWeak",decorative:!0,size:"sizeIcon20"}));break;default:break}let s="colorTextWeak";return o==="error"?s="colorTextError":o==="error_inverse"?s="colorTextErrorWeak":o==="inverse"&&(s="colorTextInverseWeak"),t(v,{marginTop:r||"space30",ref:E},p,t(y,l(l({},V(e)),{as:"div",color:s,fontSize:"fontSize30",lineHeight:"lineHeight30",marginLeft:p?"space20":void 0}),i))});m.displayName="HelpText";export{m as HelpText,a as HelpTextVariants};
