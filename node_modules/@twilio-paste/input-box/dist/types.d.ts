/// <reference types="react" />
import * as PropTypes from 'prop-types';
import type { BoxProps } from '@twilio-paste/box';
export declare type InputBoxTypes = 'text' | 'email' | 'hidden' | 'number' | 'password' | 'search' | 'tel' | 'date' | 'time';
export declare type Variants = 'default' | 'inverse';
export interface FauxInputProps {
    children: NonNullable<React.ReactNode>;
    disabled?: boolean;
    element: BoxProps['element'];
    hasError?: boolean;
    readOnly?: boolean;
    type?: InputBoxTypes;
    variant?: Variants;
}
export declare const FauxInputPropTypes: {
    children: PropTypes.Validator<string | number | boolean | {} | PropTypes.ReactElementLike | PropTypes.ReactNodeArray>;
    disabled: PropTypes.Requireable<boolean>;
    element: PropTypes.Validator<string>;
    hasError: PropTypes.Requireable<boolean>;
    readOnly: PropTypes.Requireable<boolean>;
    type: any;
    variant: any;
};
//# sourceMappingURL=types.d.ts.map