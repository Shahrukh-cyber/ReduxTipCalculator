var L=Object.create,v=Object.defineProperty,q=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty,_=Object.getOwnPropertyNames,O=Object.getOwnPropertyDescriptor,y=Object.getOwnPropertySymbols,V=Object.prototype.propertyIsEnumerable;var a=Object.assign,R=o=>v(o,"__esModule",{value:!0});var s=(o,r)=>{var i={};for(var e in o)g.call(o,e)&&r.indexOf(e)<0&&(i[e]=o[e]);if(o!=null&&y)for(var e of y(o))r.indexOf(e)<0&&V.call(o,e)&&(i[e]=o[e]);return i};var F=(o,r)=>{R(o);for(var i in r)v(o,i,{get:r[i],enumerable:!0})},X=(o,r,i)=>{if(R(o),r&&typeof r=="object"||typeof r=="function")for(let e of _(r))!g.call(o,e)&&e!=="default"&&v(o,e,{get:()=>r[e],enumerable:!(i=O(r,e))||i.enumerable});return o},t=o=>o&&o.__esModule?o:X(v(o!=null?L(q(o)):{},"default",{value:o,enumerable:!0}),o);F(exports,{Popover:()=>z,PopoverButton:()=>I,PopoverContainer:()=>C,usePopoverState:()=>c.useNonModalDialogPrimitiveState});var l=t(require("react")),B=t(require("@twilio-paste/box")),c=t(require("@twilio-paste/non-modal-dialog-primitive"));var w=t(require("react")),m=w.createContext({});var Y=l.forwardRef((x,W)=>{var{children:o,gutter:r,placement:i,state:e}=x,n=s(x,["children","gutter","placement","state"]);let H=e||c.useNonModalDialogPrimitiveState(a({gutter:r,modal:!0,placement:i},n));return l.createElement(m.Provider,{value:H},l.createElement(B.Box,{ref:W},o))}),C=l.memo(Y);C.displayName="PopoverContainer";var p=t(require("react")),S=t(require("prop-types")),d=t(require("@twilio-paste/box")),h=t(require("@twilio-paste/button")),M=t(require("@twilio-paste/icons/cjs/CloseIcon")),T=t(require("@twilio-paste/theme")),k=t(require("@twilio-paste/non-modal-dialog-primitive"));var N=t(require("react")),D=t(require("@twilio-paste/non-modal-dialog-primitive")),b=t(require("@twilio-paste/theme")),f=o=>{let r=b.useTheme();return N.createElement(D.NonModalDialogArrowPrimitive,a(a({},o),{size:r.fontSizes.fontSize70,stroke:r.borderColors.colorBorderWeaker,fill:r.backgroundColors.colorBackgroundBody}))};f.displayName="PopoverArrow";var j=p.forwardRef((e,i)=>{var{style:o}=e,r=s(e,["style"]);return p.createElement(d.Box,a(a({},d.safelySpreadBoxProps(r)),{backgroundColor:"colorBackgroundBody",borderStyle:"solid",borderWidth:"borderWidth10",borderColor:"colorBorderWeaker",borderRadius:"borderRadius20",boxShadow:"shadowCard",maxWidth:"size30",zIndex:"zIndex80",_focus:{outline:"none"},style:o,ref:i}))}),z=p.forwardRef((e,i)=>{var{children:o}=e,r=s(e,["children"]);let n=p.useContext(m);return p.createElement(k.NonModalDialogPrimitive,a(a(a({},n),r),{as:j,ref:i,preventBodyScroll:!1}),p.createElement(T.StyledBase,null,p.createElement(f,a({},n)),p.createElement(d.Box,{paddingX:"space80",paddingY:"space70"},p.createElement(d.Box,{position:"absolute",right:8,top:8},p.createElement(h.Button,{variant:"reset",size:"reset",onClick:n.hide},p.createElement(M.CloseIcon,{decorative:!1,color:"colorTextWeak",size:"sizeIcon10",title:"Close popover"}))),o)))});z.displayName="Popover";var P=t(require("react")),u=t(require("prop-types")),A=t(require("@twilio-paste/button")),E=t(require("@twilio-paste/non-modal-dialog-primitive"));var I=P.forwardRef((e,i)=>{var{children:o}=e,r=s(e,["children"]);let n=P.useContext(m);return P.createElement(E.NonModalDialogDisclosurePrimitive,a(a(a({},n),r),{as:A.Button,ref:i}),o)});I.displayName="PopoverButton";
