import { BoxOptions, BoxHTMLProps, PopoverStateReturn } from 'reakit';
export declare type PopoverArrowOptions = BoxOptions & Pick<Partial<PopoverStateReturn>, 'unstable_arrowRef' | 'unstable_arrowStyles'> & Pick<PopoverStateReturn, 'placement'> & {
    /** Arrow's size */
    size?: number | string;
    fill?: string;
    stroke?: string;
};
export declare type PopoverArrowHTMLProps = BoxHTMLProps;
export declare type PopoverArrowProps = PopoverArrowOptions & PopoverArrowHTMLProps;
export declare const usePopoverArrow: {
    (options?: PopoverArrowOptions | undefined, htmlProps?: BoxHTMLProps | undefined, unstable_ignoreUseOptions?: boolean | undefined): BoxHTMLProps;
    unstable_propsAreEqual: (prev: PopoverArrowProps, next: PopoverArrowProps) => boolean;
    __keys: readonly any[];
    __useOptions: (options: PopoverArrowOptions, htmlProps: BoxHTMLProps) => PopoverArrowOptions;
};
export declare const PopoverArrow: import("reakit-system/ts/createComponent").Component<"div", PopoverArrowProps>;
//# sourceMappingURL=PopoverArrow.d.ts.map