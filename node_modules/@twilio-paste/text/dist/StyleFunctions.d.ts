import type { CSSObject } from '@twilio-paste/styling-library';
import type { StyledTextProps } from './types';
export declare const PasteStyleProps: import("styled-system").styleFn;
/**
 * Take _ prefixed style props and convert them to custom style props for CSS pseudo selectors
 *
 * @param {StyledTextProps} props any prop that Text can take
 * @return {*}  {(((props?: Record<string, unknown> | undefined) => CSSObject) | Record<string, never>)}
 */
export declare const getPseudoStyles: (props: Partial<StyledTextProps>) => Record<string, never> | ((props?: Record<string, unknown> | undefined) => CSSObject);
/**
 * Used to return any custom styles provided for a Paste element, that is declared in the elements object on the customization provider context.
 * Return custom css containing the custom styles that match the current element name being rendered where there is an elements object key
 * that matches the value of the paste-element data attribute. Transform design tokens to their corresponding values as they appear on the theme
 *
 * @param {StyledTextProps} props
 * @return {*}  {((() => CSSObject) | Record<string, never>)}
 */
export declare const getCustomElementStyles: (props: StyledTextProps) => (() => CSSObject) | Record<string, never>;
//# sourceMappingURL=StyleFunctions.d.ts.map