import * as React from 'react';
declare const Avatar: React.ForwardRefExoticComponent<(React.HTMLAttributes<"div"> & Pick<import("@twilio-paste/box").BoxProps, "element"> & {
    src?: string | undefined;
    icon?: undefined;
} & {
    name: string;
    size?: "sizeIcon10" | "sizeIcon100" | "sizeIcon110" | "sizeIcon20" | "sizeIcon30" | "sizeIcon40" | "sizeIcon50" | "sizeIcon60" | "sizeIcon70" | "sizeIcon80" | "sizeIcon90" | ("sizeIcon10" | "sizeIcon100" | "sizeIcon110" | "sizeIcon20" | "sizeIcon30" | "sizeIcon40" | "sizeIcon50" | "sizeIcon60" | "sizeIcon70" | "sizeIcon80" | "sizeIcon90" | null)[] | {
        [x: string]: "sizeIcon10" | "sizeIcon100" | "sizeIcon110" | "sizeIcon20" | "sizeIcon30" | "sizeIcon40" | "sizeIcon50" | "sizeIcon60" | "sizeIcon70" | "sizeIcon80" | "sizeIcon90" | undefined;
        [x: number]: "sizeIcon10" | "sizeIcon100" | "sizeIcon110" | "sizeIcon20" | "sizeIcon30" | "sizeIcon40" | "sizeIcon50" | "sizeIcon60" | "sizeIcon70" | "sizeIcon80" | "sizeIcon90" | undefined;
    } | null | undefined;
} & React.RefAttributes<HTMLDivElement>) | (React.HTMLAttributes<"div"> & Pick<import("@twilio-paste/box").BoxProps, "element"> & {
    src?: undefined;
    icon?: React.FC<import("@twilio-paste/icons/esm/types").GenericIconProps> | undefined;
} & {
    name: string;
    size?: "sizeIcon10" | "sizeIcon100" | "sizeIcon110" | "sizeIcon20" | "sizeIcon30" | "sizeIcon40" | "sizeIcon50" | "sizeIcon60" | "sizeIcon70" | "sizeIcon80" | "sizeIcon90" | ("sizeIcon10" | "sizeIcon100" | "sizeIcon110" | "sizeIcon20" | "sizeIcon30" | "sizeIcon40" | "sizeIcon50" | "sizeIcon60" | "sizeIcon70" | "sizeIcon80" | "sizeIcon90" | null)[] | {
        [x: string]: "sizeIcon10" | "sizeIcon100" | "sizeIcon110" | "sizeIcon20" | "sizeIcon30" | "sizeIcon40" | "sizeIcon50" | "sizeIcon60" | "sizeIcon70" | "sizeIcon80" | "sizeIcon90" | undefined;
        [x: number]: "sizeIcon10" | "sizeIcon100" | "sizeIcon110" | "sizeIcon20" | "sizeIcon30" | "sizeIcon40" | "sizeIcon50" | "sizeIcon60" | "sizeIcon70" | "sizeIcon80" | "sizeIcon90" | undefined;
    } | null | undefined;
} & React.RefAttributes<HTMLDivElement>)>;
export { Avatar };
//# sourceMappingURL=index.d.ts.map