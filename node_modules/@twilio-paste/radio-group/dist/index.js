var N=Object.create,h=Object.defineProperty,q=Object.getPrototypeOf,E=Object.prototype.hasOwnProperty,S=Object.getOwnPropertyNames,V=Object.getOwnPropertyDescriptor,k=Object.getOwnPropertySymbols,z=Object.prototype.propertyIsEnumerable;var i=Object.assign,I=e=>h(e,"__esModule",{value:!0});var C=(e,r)=>{var a={};for(var o in e)E.call(e,o)&&r.indexOf(o)<0&&(a[o]=e[o]);if(e!=null&&k)for(var o of k(e))r.indexOf(o)<0&&z.call(e,o)&&(a[o]=e[o]);return a};var D=(e,r)=>{I(e);for(var a in r)h(e,a,{get:r[a],enumerable:!0})},O=(e,r,a)=>{if(I(e),r&&typeof r=="object"||typeof r=="function")for(let o of S(r))!E.call(e,o)&&o!=="default"&&h(e,o,{get:()=>r[o],enumerable:!(a=V(r,o))||a.enumerable});return e},n=e=>e&&e.__esModule?e:O(h(e!=null?N(q(e)):{},"default",{value:e,enumerable:!0}),e);D(exports,{Radio:()=>w,RadioGroup:()=>M});var t=n(require("react")),R=n(require("prop-types")),B=n(require("@twilio-paste/uid-library")),T=n(require("@twilio-paste/box")),s=n(require("@twilio-paste/base-radio-checkbox"));var H=n(require("react")),g=H.createContext({name:"",value:"",disabled:!1,hasError:!1,onChange:()=>{}});var A=t.forwardRef((e,r)=>t.createElement(T.Box,i({as:"input",type:"radio",size:"size0",border:"none",overflow:"hidden",padding:"space0",margin:"space0",whiteSpace:"nowrap",textTransform:"none",position:"absolute",clip:"rect(0 0 0 0)",ref:r},e))),w=t.forwardRef((f,v)=>{var{id:e,name:r,value:a,checked:o,disabled:d,hasError:m,onChange:b,children:y,helpText:c}=f,x=C(f,["id","name","value","checked","disabled","hasError","onChange","children","helpText"]);let P=B.useUID(),u=t.useContext(g),l={name:r!=null?r:u.name,checked:o!=null?o:u.value===a,disabled:d!=null?d:u.disabled,hasError:m!=null?m:u.hasError,onChange:b!=null?b:u.onChange};return t.createElement(T.Box,{position:"relative",display:"inline-flex",alignItems:"flex-start",flexDirection:"column",verticalAlign:"top"},t.createElement(A,i(i(i({},x),l),{value:a,"aria-describedby":P,"aria-invalid":l.hasError,id:e,ref:v})),t.createElement(s.BaseRadioCheckboxLabel,{disabled:l.disabled,htmlFor:e},t.createElement(s.BaseRadioCheckboxControl,{borderRadius:"borderRadiusCircle",disabled:l.disabled,type:"radio"},t.createElement(T.Box,{as:"span",backgroundColor:l.disabled&&l.checked?"colorBackgroundStrongest":"colorBackgroundBody",borderRadius:"borderRadiusCircle",height:"sizeSquare25",width:"sizeSquare25"})),t.createElement(s.BaseRadioCheckboxLabelText,null,y)),c&&t.createElement(s.BaseRadioCheckboxHelpText,{helpTextId:P},c))});w.displayName="Radio";var p=n(require("react")),L=n(require("prop-types")),G=n(require("@twilio-paste/inline-control-group"));var M=p.forwardRef((c,y)=>{var{name:e,value:r,onChange:a,disabled:o=!1,errorText:d,children:m}=c,b=C(c,["name","value","onChange","disabled","errorText","children"]);let x=p.useMemo(()=>f=>{a!=null&&a(f.target.value)},[a]),v=p.useMemo(()=>({name:e,value:r||"",disabled:o,hasError:d!=null,onChange:x}),[e,r,o,d,x]);return p.createElement(g.Provider,{value:v},p.createElement(G.InlineControlGroup,i(i({},b),{disabled:o,errorText:d,name:e,ref:y}),m))});M.displayName="RadioGroup";
