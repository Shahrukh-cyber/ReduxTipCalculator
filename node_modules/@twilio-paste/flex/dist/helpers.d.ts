import { ValueOf } from '@twilio-paste/types';
import { Basis, FlexProps } from './types';
export declare const getGrow: ({ grow }: FlexProps) => number | number[];
export declare const getShrink: ({ shrink, basis }: FlexProps) => number | number[];
export declare const getSuffix: (item: Basis) => string;
export declare const getBasis: ({ basis }: FlexProps) => string | string[];
declare type GetVerticalReturn = 'column' | 'row';
export declare const getVertical: ({ vertical }: FlexProps) => GetVerticalReturn | GetVerticalReturn[];
declare type GetWrapReturn = 'wrap' | 'nowrap';
export declare const getWrap: ({ wrap }: FlexProps) => GetWrapReturn | GetWrapReturn[];
declare const RemapedVerticalAlignments: {
    readonly top: "flex-start";
    readonly center: "center";
    readonly bottom: "flex-end";
    readonly stretch: "stretch";
};
export declare const vAlignToProps: ({ vAlignContent, }: FlexProps) => ValueOf<typeof RemapedVerticalAlignments> | ValueOf<typeof RemapedVerticalAlignments>[];
export declare const hAlignToProps: ({ hAlignContent }: FlexProps) => any;
export {};
//# sourceMappingURL=helpers.d.ts.map