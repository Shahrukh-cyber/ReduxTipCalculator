import * as PropTypes from 'prop-types';
export declare const ToastPropTypes: {
    children: PropTypes.Validator<string | number | boolean | {} | PropTypes.ReactElementLike | PropTypes.ReactNodeArray>;
    onDismiss: PropTypes.Requireable<(...args: any[]) => any>;
    variant: any;
};
export declare const ToastPortalPropTypes: {
    children: PropTypes.Validator<string | number | boolean | {} | PropTypes.ReactElementLike | PropTypes.ReactNodeArray>;
    __console_patch: PropTypes.Requireable<boolean>;
};
export declare const ToastContainerPropTypes: {
    children: PropTypes.Validator<string | number | boolean | {} | PropTypes.ReactElementLike | PropTypes.ReactNodeArray>;
    __console_patch: PropTypes.Requireable<boolean>;
};
export declare const ToasterPropTypes: {
    toasts: any;
    pop: PropTypes.Validator<(...args: any[]) => any>;
    __console_patch: PropTypes.Requireable<boolean>;
};
//# sourceMappingURL=propTypes.d.ts.map