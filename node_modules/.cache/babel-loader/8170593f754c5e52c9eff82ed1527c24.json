{"ast":null,"code":"import produce from 'immer';\nimport { ADD_ITEM, REMOVE_ITEM, UPDATE_ITEM_PRICE, UPDATE_ITEM_QUANTITY } from './actions';\nlet id = 1;\nexport const initialItems = [{\n  uuid: id++,\n  name: 'Tofu Roast',\n  price: 14,\n  quantity: 1\n}, {\n  uuid: id++,\n  name: 'Vegan Ham',\n  price: 12,\n  quantity: 1\n}];\nexport const reducer = produce((state = initialItems, action) => {\n  // if (action.type === ADD_ITEM) {\n  //   const item = { uuid: id++, quantity: 1, ...action.payload }\n  //   return [...state, item]\n  // }\n  if (action.type === ADD_ITEM) {\n    const item = {\n      uuid: id++,\n      quantity: 1,\n      ...action.payload\n    };\n    state.push(item);\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    debugger;\n    return state.filter(item => item.uuid !== action.payload.uuid);\n  } // if (action.type === UPDATE_ITEM_PRICE) {\n  //   return state.map(item => {\n  //     if (item.uuid === action.payload.uuid) {\n  //       return { ...item, price: action.payload.price }\n  //     }\n  //     return item;\n  //   })\n  // } \n\n\n  if (action.type === UPDATE_ITEM_PRICE) {\n    const item = state.find(item => item.uuid === action.payload.uuid);\n    item.price = parseInt(action.payload.price, 10);\n  } // if (action.type === UPDATE_ITEM_QUANTITY) {\n  //   return state.map(item => {\n  //     if (item.uuid === action.payload.uuid) {\n  //       return { ...item, quantity: action.payload.quantity }\n  //     }\n  //     return item;\n  //   })\n  // }\n\n\n  if (action.type === UPDATE_ITEM_QUANTITY) {\n    const item = state.find(item => item.uuid === action.payload.uuid);\n    item.quantity = parseInt(action.payload.qua, 10);\n  }\n}, initialItems);\nexport default reducer;","map":{"version":3,"sources":["/Users/macsystem/Desktop/tip-calculator/src/store/items/reducer.js"],"names":["produce","ADD_ITEM","REMOVE_ITEM","UPDATE_ITEM_PRICE","UPDATE_ITEM_QUANTITY","id","initialItems","uuid","name","price","quantity","reducer","state","action","type","item","payload","push","filter","find","parseInt","qua"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,iBAAhC,EAAmDC,oBAAnD,QAA+E,WAA/E;AAEA,IAAIC,EAAE,GAAG,CAAT;AAEA,OAAO,MAAMC,YAAY,GAAG,CAC1B;AAAEC,EAAAA,IAAI,EAAEF,EAAE,EAAV;AAAcG,EAAAA,IAAI,EAAE,YAApB;AAAkCC,EAAAA,KAAK,EAAE,EAAzC;AAA6CC,EAAAA,QAAQ,EAAE;AAAvD,CAD0B,EAE1B;AAAEH,EAAAA,IAAI,EAAEF,EAAE,EAAV;AAAcG,EAAAA,IAAI,EAAE,WAApB;AAAiCC,EAAAA,KAAK,EAAE,EAAxC;AAA4CC,EAAAA,QAAQ,EAAE;AAAtD,CAF0B,CAArB;AAKP,OAAO,MAAMC,OAAO,GAAGX,OAAO,CAAC,CAACY,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC/D;AACA;AACA;AACA;AACA,MAAIA,MAAM,CAACC,IAAP,KAAgBb,QAApB,EAA8B;AAC5B,UAAMc,IAAI,GAAG;AAAER,MAAAA,IAAI,EAAEF,EAAE,EAAV;AAAcK,MAAAA,QAAQ,EAAE,CAAxB;AAA2B,SAAGG,MAAM,CAACG;AAArC,KAAb;AACAJ,IAAAA,KAAK,CAACK,IAAN,CAAWF,IAAX;AACD;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgBZ,WAApB,EAAiC;AAC/B;AACA,WAAOU,KAAK,CAACM,MAAN,CAAaH,IAAI,IAAIA,IAAI,CAACR,IAAL,KAAcM,MAAM,CAACG,OAAP,CAAeT,IAAlD,CAAP;AACD,GAZ8D,CAa/D;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,MAAIM,MAAM,CAACC,IAAP,KAAgBX,iBAApB,EAAuC;AACrC,UAAMY,IAAI,GAAGH,KAAK,CAACO,IAAN,CAAYJ,IAAD,IAAUA,IAAI,CAACR,IAAL,KAAcM,MAAM,CAACG,OAAP,CAAeT,IAAlD,CAAb;AACAQ,IAAAA,IAAI,CAACN,KAAL,GAAaW,QAAQ,CAACP,MAAM,CAACG,OAAP,CAAeP,KAAhB,EAAuB,EAAvB,CAArB;AAID,GA5B8D,CA6B/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAII,MAAM,CAACC,IAAP,KAAgBV,oBAApB,EAA0C;AACxC,UAAMW,IAAI,GAAGH,KAAK,CAACO,IAAN,CAAWJ,IAAI,IAAIA,IAAI,CAACR,IAAL,KAAcM,MAAM,CAACG,OAAP,CAAeT,IAAhD,CAAb;AACAQ,IAAAA,IAAI,CAACL,QAAL,GAAgBU,QAAQ,CAACP,MAAM,CAACG,OAAP,CAAeK,GAAhB,EAAqB,EAArB,CAAxB;AACD;AAGF,CA3C6B,EA2C3Bf,YA3C2B,CAAvB;AA6CP,eAAeK,OAAf","sourcesContent":["import produce from 'immer';\nimport { ADD_ITEM, REMOVE_ITEM, UPDATE_ITEM_PRICE, UPDATE_ITEM_QUANTITY } from './actions'\n\nlet id = 1;\n\nexport const initialItems = [\n  { uuid: id++, name: 'Tofu Roast', price: 14, quantity: 1 },\n  { uuid: id++, name: 'Vegan Ham', price: 12, quantity: 1 }\n];\n\nexport const reducer = produce((state = initialItems, action) => {\n  // if (action.type === ADD_ITEM) {\n  //   const item = { uuid: id++, quantity: 1, ...action.payload }\n  //   return [...state, item]\n  // }\n  if (action.type === ADD_ITEM) {\n    const item = { uuid: id++, quantity: 1, ...action.payload };\n    state.push(item);\n  }\n  if (action.type === REMOVE_ITEM) {\n    debugger;\n    return state.filter(item => item.uuid !== action.payload.uuid)\n  }\n  // if (action.type === UPDATE_ITEM_PRICE) {\n  //   return state.map(item => {\n  //     if (item.uuid === action.payload.uuid) {\n  //       return { ...item, price: action.payload.price }\n  //     }\n  //     return item;\n  //   })\n\n  // } \n  if (action.type === UPDATE_ITEM_PRICE) {\n    const item = state.find((item) => item.uuid === action.payload.uuid)\n    item.price = parseInt(action.payload.price, 10);\n\n\n\n  }\n  // if (action.type === UPDATE_ITEM_QUANTITY) {\n  //   return state.map(item => {\n  //     if (item.uuid === action.payload.uuid) {\n  //       return { ...item, quantity: action.payload.quantity }\n  //     }\n  //     return item;\n  //   })\n  // }\n  if (action.type === UPDATE_ITEM_QUANTITY) {\n    const item = state.find(item => item.uuid === action.payload.uuid)\n    item.quantity = parseInt(action.payload.qua, 10)\n  }\n\n\n}, initialItems);\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}